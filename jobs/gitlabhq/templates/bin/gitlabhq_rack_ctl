#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the monit script
source /var/vcap/jobs/gitlabhq/helpers/ctl_setup.sh 'gitlabhq'

# Load start helper
source $JOB_DIR/helpers/ctl_start.sh

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8

# RUNAS user is a member of vcap group
export RUNAS=gitlab

# Setup for Rails application
source $JOB_DIR/bin/rails_ctl_setup.sh

# Helpers for PostgresDB
source $JOB_DIR/helpers/ctl_db_utils.sh

# Helpers for Redis
source $JOB_DIR/helpers/ctl_redis_utils.sh

# Helper for setting up users
source $JOB_DIR/helpers/user.sh

# Setup HTTP_PROXY, HTTPS_PROXY, NO_PROXY as necessary
source $JOB_DIR/helpers/ctl_nginx.sh

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # Following gitlab-specific instructions for installing gitolite/gitlabhq
    # https://github.com/gitlabhq/gitlabhq/blob/stable/doc/installation.md#3-install-gitolite
    
    # create gitlabhq user, with keys that work with gitolite job
    create_user $RUNAS "gitlab system"
    # add user to git & vcap groups
    add_user_to_group $RUNAS git
    add_user_to_group $RUNAS vcap

    # install pre-generated keys
    install_keypair "$ADMIN_USER_PUB_KEY" "$ADMIN_USER_PRIV_KEY" "$RUNAS" "id_rsa"
    

    cd $WEBAPP_DIR
    
    # TODO what user/group to change code base into?
    ctl_start_prepare_webapp "$RUNAS" $WEBAPP_DIR
    
    # link gitlab configuration
    link_job_file_to_package config/gitlab.yml

    # link database.yml config to application
    link_sql_db_config
    
    # if redis enabled, link it to application
    # link_redis_config yaml config/redis.yml
    link_job_file_to_package config/redis.yml
    
    # Create SQLite3 database persistent storage if required
    prepare_database

    # Migrations, if requested
    run_migrations "$RUNAS"
    
    # TODO what is 'ulimit -c unlimited' for; when not to use it?
    ulimit -c unlimited
    
    # Start the rack app using requested appstack
    ctl_start "$RUNAS" $WEBAPP_DIR

    echo "Running $JOB_NAME on $PORT"
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: gitlabhq_rack_ctl {start|stop}"

    ;;

esac
exit 0