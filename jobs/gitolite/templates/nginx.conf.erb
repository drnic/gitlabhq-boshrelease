#deployment webapp nginx.conf
<% 
require 'ostruct'
properties.gitolite ||= OpenStruct.new
properties.gitolite.nginx ||= OpenStruct.new
nginx = properties.gitolite.nginx
gitolite_port_start = 5500
%>
user vcap vcap;
worker_processes <%= nginx.worker_processes || 1 %>;
pid /var/vcap/sys/run/gitolite/nginx.pid;

events {
  worker_connections  8192;
  use epoll;
}


http {
  include       mime.types;
  default_type  text/html;
  server_tokens off;

  log_format main  '$host - [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$remote_addr response_time:$upstream_response_time';

  sendfile             on;  #enable use of sendfile()
  tcp_nopush           on;
  tcp_nodelay          on;  #disable nagel's algorithm

  server_names_hash_bucket_size  128;
  if_modified_since before;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_buffers      16 8k;
  gzip_types        application/json text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  server {
    #
    # The default port to listen on.
    #
    # Note that this may be also specified as IP:Port combinations.
    #
    # By default Nginx will listen for traffic on the specified port for all IP
    # addresses assigned to the host.
    #
    listen <%= nginx.port || 80 %>;

    #
    # Server Names
    #
    # This is the list of IP's and/or domain names with any wildcards or
    # subdomains. The special value '_' is used to match all domains and IPs and
    # generally denotes the default server for the entire Nginx process.
    #
    # Note that if you specify any domains with wild cards, the very first domain
    # listed must be without a wild card. For example:
    #
    # server_name www.mydomain.org *.mydomain.org;
    #
    # It is good practice to include wildcard subdomains so that Nginx will not
    # require a restart when new services are added for an application.
    #
    server_name  <%= nginx.server_name || '_' %>;
    server_name_in_redirect off;

    #
    # This assigns the maximum accepted body size of client request. It is placed
    # here as a precaution to limit against certain kinds of attacks. Be aware that
    # it is here in case the application accepts large file uploads. In such a case
    # this value will need to be adjusted.
    #
    client_max_body_size 256M;

    #
    # The application root which is inherited for all location blocks below.
    #
    root /var/vcap/packages/gitolite/public;

    #
    # Logging
    #
    # Log files are stored within the /var/vcap/sys/log/gitolite/ directory.
    #
    access_log  /var/vcap/sys/log/gitolite/gitolite.access.log  main;
    error_log   /var/vcap/sys/log/gitolite/gitolite.error.log notice;

    #
    # Expire header on assets. For more information on the reasoning behind
    # this please browse http://developer.yahoo.com/performance/rules.html#expires
    #
    # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
    location ~ ^/(images|assets|javascripts|stylesheets)/ {
      try_files  $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_gitolite;
      expires 10y;
    }

    # enable chunkin module
    # as per https://github.com/agentzh/chunkin-nginx-module#description
    chunkin on;

    error_page 411 = @my_411_error;
    location @my_411_error {
        chunkin_resume;
    }

    # Default location as specified by https://github.com/yibe/gitolite-gitweb-http-backend-starman-nginx#nginx
    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass  http://127.0.0.1:<%= gitolite_port_start %>;
    }

  }
}

