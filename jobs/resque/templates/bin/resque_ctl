#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the monit script
source /var/vcap/jobs/resque/helpers/ctl_setup.sh 'resque'

# Load start helper
source $JOB_DIR/helpers/ctl_start.sh


export LANG=en_US.UTF-8

# RUNAS user is a member of vcap group
export RUNAS=gitlab
export HOME=/home/$RUNAS

# Setup for Rails application
source $JOB_DIR/bin/rails_ctl_setup.sh

# Helpers for PostgresDB
source $JOB_DIR/helpers/ctl_db_utils.sh

# Helpers for Redis
source $JOB_DIR/helpers/ctl_redis_utils.sh

# Helper for setting up users
source $JOB_DIR/helpers/user.sh

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # Following gitlab-specific instructions for installing gitolite/gitlabhq
    # https://github.com/gitlabhq/gitlabhq/blob/stable/doc/installation.md#3-install-gitolite

    if [[ -d /var/vcap/jobs/gitlabhq ]]
    then
      echo running resque on same machine as gitlabhq
      echo waiting for it to create users etc
      # TODO 'wait', rather than sleep
      sleep 10
    else
      # create gitlabhq user, with keys that work with gitolite job
      create_user $RUNAS "gitlab system"
      # add user to git & vcap groups
      add_user_to_group $RUNAS git
      add_user_to_group $RUNAS vcap

      # install pre-generated keys
      install_keypair "$ADMIN_USER_PUB_KEY" "$ADMIN_USER_PRIV_KEY" "$RUNAS" "id_rsa"
    fi

    cd $WEBAPP_DIR

    # TODO what user/group to change code base into?
    ctl_start_prepare_webapp "$RUNAS" $WEBAPP_DIR

    # link gitlab configuration
    copy_job_file_to_package config/gitlab.yml

    # link database.yml config to application
    link_sql_db_config
    
    # if redis enabled, link it to application
    # link_redis_config yaml config/redis.yml
    copy_job_file_to_package config/redis.yml

    # FIXME - run more than 1 worker
    # FIXME - run as vcap
    # see gitlabhq/resque.sh
    chpst -u $RUNAS:vcap bundle exec rake environment resque:work \
        QUEUE=post_receive,mailer,system_hook VERBOSE=1 \
        PIDFILE=$PIDFILE BACKGROUND=yes \
        >>$LOG_DIR/$JOB_NAME.stdout.log \
        2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: resque_ctl {start|stop}"

    ;;

esac
exit 0